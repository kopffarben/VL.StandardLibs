<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0-windows</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>

    <!-- Warning about x64 MSIL mismatch on Stride native assemblies. Ignore because we're the Windows only package. -->
    <NoWarn>MSB3270</NoWarn>

    <IsPackable>false</IsPackable>
    
    <OutputPath>..\..\dependencies\</OutputPath>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <!-- We want all dependencies in our output folder -->
    <EnableDynamicLoading>true</EnableDynamicLoading>
    <!-- Generates Stride asset database -->
    <StrideIsExecutable>true</StrideIsExecutable>
  </PropertyGroup>

  <PropertyGroup>
    <!-- If you get crashes on startup (missing method, or type) it's most likely that the used vvvv version doesn't match -->
    <VVVVInstallPath>$(ProgramW6432)\vvvv\vvvv_gamma_6.4</VVVVInstallPath>
    <!-- Set to true to copy VL.Core.dll to vvvv install folder. Needed in order to have modifications in that file to get picked up. -->
    <!-- When doing so the assembly major version must match with the used vvvv version. The version can be set in the Directory.Build.props file. -->
    <!-- Note that API changes on the surface level might lead to crashes because private implementations (VL.AppServices.dll) depend on them. -->
    <WorkOnVLCore>false</WorkOnVLCore>
    <ThisPackageRepository>$([System.IO.Path]::GetFullPath('$(MsBuildThisFileDirectory)..\..'))</ThisPackageRepository>
  </PropertyGroup>

  <Target Name="CopyVLCoreToOutputFolder" AfterTargets="Build" Condition="'$(WorkOnVLCore)' == 'true'">
    <ItemGroup>
      <VLCoreFiles Include="$(OutputPath)VL.Core.*" />
    </ItemGroup>
    <Copy SourceFiles="@(VLCoreFiles)" DestinationFolder="$(VVVVInstallPath)" OverwriteReadOnlyFiles="true" />
  </Target>

  <ItemGroup>
    <ProjectReference Include="..\..\VL.CoreLib.Windows\src\VL.CoreLib.Windows.csproj" />
    <ProjectReference Include="..\..\VL.CoreLib\src\VL.CoreLib.csproj" />
    <ProjectReference Include="..\..\VL.EditingFramework.Skia\src\VL.EditingFramework.Skia.csproj" />
    <ProjectReference Include="..\..\VL.EditingFramework\src\VL.EditingFramework.csproj" />
    <ProjectReference Include="..\..\VL.Fundamentals\src\VL.Fundamentals.csproj" />
    <ProjectReference Include="..\..\VL.FuzzySearch\src\VL.FuzzySearch.csproj" />
    <ProjectReference Include="..\..\VL.ImGui.Skia\src\VL.ImGui.Skia.csproj" />
    <ProjectReference Include="..\..\VL.ImGui.Stride\src\VL.ImGui.Stride.csproj" />
    <ProjectReference Include="..\..\VL.ImGui\src\VL.ImGui.csproj" />
    <ProjectReference Include="..\..\VL.IO.Redis\src\VL.IO.Redis.csproj" />
    <ProjectReference Include="..\..\VL.LogView\src\VL.LogView.csproj" />
    <ProjectReference Include="..\..\VL.Serialization.FSPickler\src\VL.Serialization.FSPickler.csproj" />
    <ProjectReference Include="..\..\VL.Serialization.MessagePack\src\VL.Serialization.MessagePack.csproj" />
    <ProjectReference Include="..\..\VL.Serialization.Raw\src\VL.Serialization.Raw.csproj" />
    <ProjectReference Include="..\..\VL.Skia\src\VL.Skia.csproj" />
    <ProjectReference Include="..\..\VL.Stride.HDE\src\VL.Stride.HDE.csproj" />
    <ProjectReference Include="..\..\VL.Stride\src\VL.Stride.csproj" />
    <ProjectReference Include="..\..\VL.TPL.Dataflow\src\VL.TPL.Dataflow.csproj" />
    <ProjectReference Include="..\..\VL.Video\src\VL.Video.csproj" />
  </ItemGroup>

</Project>
