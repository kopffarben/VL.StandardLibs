name: Copilot Setup Steps

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  copilot-setup-steps:
    # The Copilot agent expects this exact job id.
    runs-on: windows-latest
    timeout-minutes: 45
    permissions:
      contents: read

    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: "1"
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "1"
      APP_ENV: "CI"

    defaults:
      run:
        shell: pwsh
        working-directory: ${{ github.workspace }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
          cache: true
          cache-dependency-path: |
            Directory.Packages.props
            **/*.csproj

      - name: Cache global packages and HTTP cache
        uses: actions/cache@v4
        with:
          path: |
            ~\\.nuget\\packages
            ~\\AppData\\Local\\NuGet\\Cache
            ~\\AppData\\Local\\NuGet\\v3-cache
          key: nuget-${{ runner.os }}-${{ hashFiles('Directory.Packages.props', '**/*.csproj') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Restore solution
        run: dotnet restore VL.StandardLibs.sln --configfile NuGet.config --nologo

      - name: Build solution (Release)
        run: dotnet build VL.StandardLibs.sln -c Release --no-restore --nologo /m

      - name: Build solution (Debug)
        run: dotnet build VL.StandardLibs.sln -c Debug --no-restore --nologo /m

      - name: Run unit test projects (Release)
        run: |
          $testProjects = @(
            "VL.Core/tests/VL.Core.Tests.csproj",
            "VL.Serialization.Raw/tests/VL.Serialization.Raw.Tests.csproj",
            "VL.Serialization.MessagePack/tests/VL.Serialization.MessagePack.Tests.csproj"
          )

          foreach ($project in $testProjects) {
            $name = [System.IO.Path]::GetFileNameWithoutExtension($project)
            dotnet test $project -c Release --no-build --nologo --logger "trx;LogFileName=$name.trx"
          }

      # Enable if the agent should collect build outputs for later steps.
      - name: Upload prebuilt artifacts (optional)
        if: ${{ false }}
        uses: actions/upload-artifact@v4
        with:
          name: prebuilt-release
          path: |
            **/bin/Release/
            !**/*.pdb
